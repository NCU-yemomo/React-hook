{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u989C\\u5B87\\u822A\\\\Desktop\\\\\\u5B66\\u4E60\\u6587\\u4EF6\\\\web\\u5B66\\u4E60\\\\React Study\\\\_25React\\u4EE3\\u7406\\u914D\\u7F6E\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.getData = () => {\n      /**有些情况有同源限制！*/\n\n      /** 可以在package.json里面写入\"proxy\"属性\"proxy\":\"https://localhost:3000\" 大概这样对接其端口防止跨域问题*/\n      /***此时这里的端口得是服务端口 因为本地3000根本没有数据*/\n\n      /*因为 跨域的解决实质是来个中间件 3000 = > 3000 => 5000 中间的3000便是一个中间件服务器，服务器与服务器之间联系就没有跨域问题 proxy配置的是方向的后端接口*/\n\n      /*接后端多个接口 用setupProxy.js 这个会用commonjs 文件*/\n      // axios.get(\"http://localhost:5000/api1/students\")\n      // axios.get(\"http://localhost:5001/api1/cars\")\n      axios.get(\"https://v1.hitokoto.cn\").then(response => console.log(\"成功了\", response.data),\n      //axios会自动解析会json\n      /*\r\n      成功了\r\n      */\n      error => {\n        console.log(\"失败了\", error);\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","App","getData","get","then","response","console","log","data","error","render"],"sources":["C:/Users/颜宇航/Desktop/学习文件/web学习/React Study/_25React代理配置/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nexport default class App extends Component {\r\n    getData=()=>{\r\n        /**有些情况有同源限制！*/\r\n\r\n        /** 可以在package.json里面写入\"proxy\"属性\"proxy\":\"https://localhost:3000\" 大概这样对接其端口防止跨域问题*/\r\n        /***此时这里的端口得是服务端口 因为本地3000根本没有数据*/\r\n\r\n        /*因为 跨域的解决实质是来个中间件 3000 = > 3000 => 5000 中间的3000便是一个中间件服务器，服务器与服务器之间联系就没有跨域问题 proxy配置的是方向的后端接口*/\r\n\r\n        /*接后端多个接口 用setupProxy.js 这个会用commonjs 文件*/\r\n        // axios.get(\"http://localhost:5000/api1/students\")\r\n        // axios.get(\"http://localhost:5001/api1/cars\")\r\n        axios.get(\"https://v1.hitokoto.cn\").then(\r\n            response => console.log(\"成功了\",response.data),//axios会自动解析会json\r\n            /*\r\n            成功了\r\n            */\r\n            error=>{console.log(\"失败了\",error)}\r\n        )\r\n    }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={this.getData}></button>    \r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AAAA;AACzB,eAAe,MAAMC,GAAG,SAASF,SAAS,CAAC;EAAA;IAAA;IAAA,KACvCG,OAAO,GAAC,MAAI;MACR;;MAEA;MACA;;MAEA;;MAEA;MACA;MACA;MACAF,KAAK,CAACG,GAAG,CAAC,wBAAwB,CAAC,CAACC,IAAI,CACpCC,QAAQ,IAAIC,OAAO,CAACC,GAAG,CAAC,KAAK,EAACF,QAAQ,CAACG,IAAI,CAAC;MAAC;MAC7C;AACZ;AACA;MACYC,KAAK,IAAE;QAACH,OAAO,CAACC,GAAG,CAAC,KAAK,EAACE,KAAK,CAAC;MAAA,CAAC,CACpC;IACL,CAAC;EAAA;EACHC,MAAM,GAAG;IACP,oBACE;MAAA,uBACE;QAAQ,OAAO,EAAE,IAAI,CAACR;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QACpC;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}