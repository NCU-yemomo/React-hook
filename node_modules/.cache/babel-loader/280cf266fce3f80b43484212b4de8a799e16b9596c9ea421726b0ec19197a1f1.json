{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u989C\\u5B87\\u822A\\\\Desktop\\\\\\u5B66\\u4E60\\u6587\\u4EF6\\\\web\\u5B66\\u4E60\\\\ReactHook\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  //设置空状态\n  const [isOnline, setIsOnline] = useState(null);\n  const [time, setTime] = useState[0];\n  let TimeClick = setInterval(() => {\n    setTime(time + 1);\n  }, 1000);\n  //useEffect可以返回一个函数清除副作用\n  //React 会在组件销毁时执行清除操作\n  //然后在后续渲染时重新执行副作用函数。\n  useEffect(() => {\n    document.title = `You clicked ${count}times,and run ${time}second`;\n    return () => {\n      //清除作用\n      clearInterval(TimeCalick);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Time is \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"pass Props is \", this.props.value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"onClick times = \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"click add Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"6npkVQY8VG4F1Zx+IOKgnjwKqEQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","App","props","isOnline","setIsOnline","time","setTime","TimeClick","setInterval","document","title","count","clearInterval","TimeCalick","value","setCount"],"sources":["C:/Users/颜宇航/Desktop/学习文件/web学习/ReactHook/src/App.jsx"],"sourcesContent":["import React from 'react'\r\nimport {useState,useEffect} from \"react\"\r\nfunction App(props){\r\n    //设置空状态\r\n    const [isOnline,setIsOnline]=useState(null)\r\n    const [time,setTime]=useState[0]\r\n    let TimeClick=setInterval(()=>{setTime(time+1)},1000)\r\n    //useEffect可以返回一个函数清除副作用\r\n    //React 会在组件销毁时执行清除操作\r\n    //然后在后续渲染时重新执行副作用函数。\r\n    useEffect(()=>{\r\n        document.title=`You clicked ${count}times,and run ${time}second`\r\n        return () => {\r\n            //清除作用\r\n          clearInterval(TimeCalick)\r\n        };\r\n    })\r\n    return (\r\n        <div>\r\n            <div>Time is {time}</div>\r\n            <p>pass Props is {this.props.value}</p>\r\n            <p>onClick times = {count}</p>\r\n            <button onClick={()=>setCount(count+1)}>click add Count</button>\r\n        </div>\r\n    )\r\n}\r\nexport default App\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AAAA;AACxC,SAASC,GAAG,CAACC,KAAK,EAAC;EAAA;EACf;EACA,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACL,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACM,IAAI,EAACC,OAAO,CAAC,GAACP,QAAQ,CAAC,CAAC,CAAC;EAChC,IAAIQ,SAAS,GAACC,WAAW,CAAC,MAAI;IAACF,OAAO,CAACD,IAAI,GAAC,CAAC,CAAC;EAAA,CAAC,EAAC,IAAI,CAAC;EACrD;EACA;EACA;EACAL,SAAS,CAAC,MAAI;IACVS,QAAQ,CAACC,KAAK,GAAE,eAAcC,KAAM,iBAAgBN,IAAK,QAAO;IAChE,OAAO,MAAM;MACT;MACFO,aAAa,CAACC,UAAU,CAAC;IAC3B,CAAC;EACL,CAAC,CAAC;EACF,oBACI;IAAA,wBACI;MAAA,uBAAcR,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAO,eACzB;MAAA,6BAAkB,IAAI,CAACH,KAAK,CAACY,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eACvC;MAAA,+BAAoBH,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9B;MAAQ,OAAO,EAAE,MAAII,QAAQ,CAACJ,KAAK,GAAC,CAAC,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9D;AAEd;AAAC,GAvBQV,GAAG;AAAA,KAAHA,GAAG;AAwBZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}